<script>
    var notificationJs = document.createElement('script');
    notificationJs.type = "text/javascript";
    notificationJs.id = 'simi-notifcation-js';
    notificationJs.src = '/notification.js';
    document.head.appendChild(notificationJs);
</script>
<?php if ($block->IsEnableForWebsite()): ?>
    <script type="text/javascript">
        if ('serviceWorker' in navigator && 'PushManager' in window) {
            console.log('Service Worker and Push is supported');
            var sw = "<?php echo $block->getBaseUrl() ?>" + "simipwa-sw.js";
            navigator.serviceWorker.register(sw)
                .then(function (swReg) {
                    console.log('Service Worker is registered', '');

                    swRegistration = swReg;
                    initializeUI();
                    if (navigator.onLine) {
                        swReg.update();
                    }
                    swRegistration.onupdatefound = function () {
                        var installingWorker = swRegistration.installing;
                        installingWorker.onstatechange = function (){
                            if (installingWorker.state === 'installed') {
                                if (navigator.serviceWorker.controller) {
                                    swReg.update();
                                } else {
                                    console.log('Content is cached for offline use.');
                                }
                            }
                        };
                    };

                })
                .catch(function (error) {
                    console.error('Service Worker Error', error);
                });
        } else {

            console.warn('Push messaging is not supported');
            console.log('Push Not Supported');
        }
    </script>
<?php else:?>
    <script type="text/javascript">
        if ('serviceWorker' in navigator) {
            navigator.serviceWorker.getRegistrations().then(function(registrations) {
                for(var sw of registrations) {
                    if(sw.active.scriptURL.indexOf('/simipwa-sw.js') > -1){
                        console.log('Simi Service Worker has been deleted');
                        sw.unregister();
                    }
                }
            })
        }
    </script>
<?php endif ?>

<script type="text/javascript">
    if (window && window.location &&
        window.location.pathname.indexOf('/unregisterSw') !== -1) {
        navigator.serviceWorker.getRegistrations().then(function(registrations) {
        for(let registration of registrations) {
            registration.unregister();
            console.log('Service Worker Unregirestered');
        }}).catch(function(err) {
            console.log('Service Worker Unregistration failed: ', err);
        });
        try {
            if(typeof(caches) !== "undefined"){
                caches.keys().then(function(names) {
                    for (const name of names)
                        caches.delete(name);
                });
            }
            navigator.serviceWorker.getRegistrations().then(
                function (registrations) {
                    for (let registration of registrations) {
                        registration.unregister();
                    }
                });
        } catch (err) {
            console.log(err)
        }
        window.location.href = "/";
    }
</script>
<?php if ($block->IsEnableAddToHomescreen()): ?>
    <script type="text/javascript">
        if(!document.getElementById('simi-homescreen-manifest')) {
            var link = document.createElement('link');
            link.id = 'simi-homescreen-manifest';
            link.rel = 'manifest';
            link.href = '/simi-manifest.json';
            document.head.appendChild(link);
            var meta = [
                {
                    name : 'theme-color',
                    content : "#<?php echo $block->ManifestThemeColor() ?>"
                },
                {
                    name : 'mobile-web-app-capable',
                    content : 'yes'
                },
                {
                    name : 'apple-mobile-web-app-capable',
                    content : 'yes'
                },
                {
                    name : 'apple-mobile-web-app-title',
                    content : document.title
                },
            ]
            var app_icon = "<?php echo $block->ManifestLogo() ?>"
            var linkImg = [
                {
                    rel : 'apple-touch-icon',
                    type : 'image/png',
                    sizes : '512x512',
                    href : app_icon
                },
                {
                    rel : 'apple-touch-startup-image',
                    type : false,
                    sizes : false,
                    href : app_icon
                },

            ]
            for(var i = 0 ; i < meta.length ; i++){
                var item = meta[i]
                var el = document.createElement('meta');
                el.name = item.name;
                el.content = item.content
                document.head.appendChild(el)
            }
            for(var i = 0 ; i < linkImg.length ; i++){
                var item = linkImg[i]
                var el = document.createElement('link');
                el.rel = item.rel;
                if(item.type) el.type = item.type;
                if(item.sizes) el.sizes = item.sizes;
                el.href = item.href;
                document.head.appendChild(el)
            }
        }
    </script>
<?php endif ?>
